name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: 
      - 'master' 

defaults:
  run:
    working-directory: .
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Build
        shell: bash
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run build -- --pr=${{ github.event.pull_request.number }} --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}
        env:
          CI: "true"

  deploy-to-dev:
    runs-on: ubuntu-20.04
    needs: [build]
    defaults:
      run:
        shell: bash
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        shell: bash
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=dev --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-test:
    needs: [build, deploy-to-dev]
    environment:
      name: test
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        shell: bash
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=test --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}
  
  deploy-to-uat:
    needs: [build, deploy-to-test]
    environment:
      name: uat
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        shell: bash
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=uat --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-train:
    needs: [build, deploy-to-uat]
    environment:
      name: uat
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        shell: bash
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=train --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}