name: hets-build-deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches:
      - 'master'

defaults:
  run:
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Build
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          oc adm prune builds --keep-complete=0 --namespace=e0cee6-tools --confirm
          oc adm prune builds --keep-failed=0 --namespace=e0cee6-tools --confirm
          npm ci
          DEBUG=* npm run build -- --pr=${{ github.event.pull_request.number }} --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-dev:
    runs-on: ubuntu-20.04
    needs: [build]
    defaults:
      run:
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          oc adm prune deployments --keep-failed=0 --namespace=e0cee6-dev --confirm
          oc adm prune deployments --keep-complete=0 --namespace=e0cee6-dev --confirm
          oc project e0cee6-dev
          oc delete pod --field-selector=status.phase==Succeeded
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=dev --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-test:
    needs: [build, deploy-to-dev]
    environment:
      name: test
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          oc adm prune deployments --keep-failed=0 --namespace=e0cee6-test --confirm
          oc adm prune deployments --keep-complete=0 --namespace=e0cee6-test --confirm
          oc project e0cee6-test
          oc delete pod --field-selector=status.phase==Succeeded
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=test --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-uat:
    needs: [build, deploy-to-test]
    environment:
      name: uat
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./.pipeline
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=uat --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-train:
    needs: [build, deploy-to-uat]
    environment:
      name: uat
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=train --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-prod:
    needs: [build, deploy-to-train]
    environment:
      name: prod
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./.pipeline
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_SERVER_URL }}
          oc adm prune deployments --keep-failed=0 --namespace=e0cee6-prod --confirm
          oc adm prune deployments --keep-complete=0 --namespace=e0cee6-prod --confirm
          oc project e0cee6-prod
          oc delete pod --field-selector=status.phase==Succeeded
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=prod --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}