kind: Template
apiVersion: v1
metadata:
  name: ${PROJECT_NAME}
  creationTimestamp:
labels:
  template: client-deploy
objects:
  - apiVersion: v1 #is: client
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        shared: "true"
      name: ${NAME}
    spec:
      lookupPolicy:
        local: false
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        rollingParams:
          intervalSeconds: 1
          maxSurge: 1
          maxUnavailable: 1
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${NAME}${SUFFIX}
        spec:
          containers:
            - image: ${NAME}:${VERSION}
              name: client
              ports:
              - containerPort: 8080
                protocol: TCP
              resources:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 250m
                  memory: 512Mi
              env:
                - name: API_SERVER
                  value: "${PROJECT_NAME}-api${SUFFIX}:8080"
                - name: ASPNETCORE_ENVIRONMENT
                  value: "${ASPNETCORE_ENVIRONMENT}"
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - client
            from:
              kind: ImageStreamTag
              name: ${NAME}:${VERSION}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1 #service: client
    kind: Service
    metadata:
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: web
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 1h
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      host: ${HOST}
      path: "/"
      port:
        targetPort: web
      tls:
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
      wildcardPolicy: None
parameters:
  - description: Name of the project (HETS)
    displayName: PROJECT_NAME
    name: PROJECT_NAME
    required: true
    value: "hets"
  - name: NAME
    displayName: Name
    description: The name assigned to all of the resources defined in this template.
    required: true
    value: client
  - description: A name suffix used for all objects
    displayName: Suffix
    name: SUFFIX
    required: false
    value: "-dev"
  - description: Environment short name (dev,test,uat,prod)
    displayName: ENV
    name: ENV
    required: false
    value: "dev"
  - description: A version used for the image tags
    displayName: version
    name: VERSION
    required: true
    value: "v1.0.0"
  - description: HOST
    displayName: HOST
    name: HOST
    required: true
    value: ""
  - name: ASPNETCORE_ENVIRONMENT
    displayName: AspNetCore Environment
    description: The ASP Net Core deployment environment setting.
    required: true
    value: Development